{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","selectedIdTodo","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","query","onSearch","value","setValue","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","todoUserId","onClose","useState","user","setUser","useEffect","userId","userInfo","href","email","name","App","setTodo","setSelectedTodo","setQuery","selectFilter","setSelectFilter","selectTodo","todoId","find","preaperedSearchQuery","toLowerCase","visibleTodo","filter","serchingQuery","includes","filteredTodo","swithCase","length","idTodo","todId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7cf2d76b.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\nexport type Props = {\n  todos: Todo[]\n  selectedTodo(todoId: number): void\n  selectedIdTodo: number | undefined\n};\n\nexport const TodoList: React.FC<Props> = (\n  { todos, selectedTodo, selectedIdTodo },\n) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className=\"\"\n          key={todo.id}\n        >\n\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed === true\n              && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames({\n              'has-text-success': todo.completed === true,\n              'has-text-danger': todo.completed === false,\n            })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            {selectedIdTodo === todo.id\n              ? (\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => selectedTodo(0)}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye-slash\" />\n                  </span>\n                </button>\n              )\n              : (\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => selectedTodo(todo.id)}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              )}\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\nexport type Props = {\n  query: string\n  onSearch: React.Dispatch<React.SetStateAction<string>>;\n  value: string;\n  setValue: React.Dispatch<React.SetStateAction<string>>;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  onSearch,\n  value,\n  setValue,\n}) => {\n  const handleDelete = () => {\n    onSearch('');\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={value}\n            onChange={(event) => setValue(event.target.value)}\n          >\n            <option value=\"all\">\n              All\n            </option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => onSearch(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {query\n          && (\n            <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={handleDelete}\n              />\n            </span>\n          )}\n\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\nexport type Props = {\n  todoUserId: Todo;\n  onClose(todId: number): void\n};\n\nexport const TodoModal: React.FC<Props> = ({ todoUserId, onClose }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todoUserId.userId)\n      .then(userInfo => setUser(userInfo));\n  }, []);\n\n  const handleClose = () => {\n    onClose(0);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todoUserId.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todoUserId.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todoUserId.completed === true\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodo] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>();\n  const [query, setQuery] = useState('');\n  const [selectFilter, setSelectFilter] = useState('all');\n\n  const selectTodo = (todoId: number) => {\n    setSelectedTodo(\n      todos.find(todo => todo.id === todoId) || null,\n    );\n  };\n\n  const preaperedSearchQuery = query.toLowerCase();\n\n  const visibleTodo = todos.filter(todo => {\n    const serchingQuery = todo.title.toLowerCase().includes(preaperedSearchQuery);\n\n    const swithCase = (value: string) => {\n      switch (value) {\n        case 'all':\n          return todo;\n\n        case 'active':\n          return todo.completed === false;\n\n        case 'completed':\n          return todo.completed === true;\n\n        default:\n          break;\n      }\n\n      return value;\n    };\n\n    const filteredTodo = swithCase(selectFilter);\n\n    return serchingQuery && filteredTodo;\n  });\n\n  useEffect(() => {\n    getTodos()\n      .then(todo => setTodo(todo));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onSearch={setQuery}\n                value={selectFilter}\n                setValue={setSelectFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {visibleTodo.length === 0\n\n                ? <Loader />\n\n                : (\n                  <TodoList\n                    todos={visibleTodo}\n                    selectedIdTodo={selectedTodo?.id}\n                    selectedTodo={(idTodo) => {\n                      selectTodo(idTodo);\n                    }}\n                  />\n                )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todoUserId={selectedTodo}\n          onClose={(todId: number) => selectTodo(todId)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}