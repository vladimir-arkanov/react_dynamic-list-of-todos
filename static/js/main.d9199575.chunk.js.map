{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","helpers/helpers.ts","index.tsx"],"names":["TodoList","memo","todos","setSelectedTodoId","selectedTodoId","className","map","todo","id","completed","classNames","title","type","onClick","todoId","TodoFilter","searchQuery","onSearch","complitedFilter","setComplitedFilter","handleDelete","useCallback","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","onCloseModal","useState","user","setUser","useEffect","userId","userInfo","href","email","name","App","setTodo","setSearchQuery","selectedTodo","find","preaperedSearchQuery","toLowerCase","filterTodosByComplited","filter","serchingQuery","includes","filteredTodo","selectedOption","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9199575.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React, { memo } from 'react';\nimport { Todo } from '../../types/Todo';\n\nexport type Props = {\n  todos: Todo[]\n  setSelectedTodoId: (todoId :number) => void\n  selectedTodoId: number\n};\n\nexport const TodoList: React.FC<Props> = memo((\n  { todos, setSelectedTodoId, selectedTodoId },\n) => {\n  const handleSelectId = (todoId: number) => {\n    setSelectedTodoId(todoId);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed\n              && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-success': todo.completed,\n                'has-text-danger': !todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleSelectId(todo.id)}\n              >\n                <span className=\"icon\">\n                  <i className={selectedTodoId !== todo.id\n                    ? 'far fa-eye'\n                    : 'far fa-eye-slash'}\n                  />\n                </span>\n              </button>\n\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n});\n","import React, { memo, useCallback } from 'react';\n\nexport type Props = {\n  searchQuery: string\n  onSearch: React.Dispatch<React.SetStateAction<string>>;\n  complitedFilter: string;\n  setComplitedFilter: React.Dispatch<React.SetStateAction<string>>;\n};\n\nexport const TodoFilter: React.FC<Props> = memo(({\n  searchQuery,\n  onSearch,\n  complitedFilter,\n  setComplitedFilter,\n}) => {\n  const handleDelete = useCallback(() => {\n    onSearch('');\n  }, []);\n\n  return (\n    <form\n      className=\"field has-addons\"\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={complitedFilter}\n            onChange={(event) => setComplitedFilter(event.target.value)}\n          >\n            <option value=\"all\">\n              All\n            </option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchQuery}\n          onChange={(event) => onSearch(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {searchQuery\n          && (\n            <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={handleDelete}\n              />\n            </span>\n          )}\n\n      </p>\n    </form>\n  );\n});\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { memo } from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = memo(() => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n));\n","import React, {\n  useState, useEffect, memo,\n} from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\nexport type Props = {\n  todo: Todo;\n  onCloseModal: () => void\n};\n\nexport const TodoModal: React.FC<Props> = memo((\n  { todo, onCloseModal },\n) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId)\n      .then(userInfo => setUser(userInfo));\n  }, []);\n\n  // const onClose = setSelectedTodo(0);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onCloseModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { selectedOption } from './helpers/helpers';\n\nexport const App: React.FC = () => {\n  const [todos, setTodo] = useState<Todo[]>([]);\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [complitedFilter, setComplitedFilter] = useState('all');\n\n  useEffect(() => {\n    getTodos()\n      .then(todo => setTodo(todo));\n  }, []);\n\n  const selectedTodo = (\n    todos.find(todo => todo.id === selectedTodoId)\n  );\n\n  const onCloseModal = () => {\n    setSelectedTodoId(0);\n  };\n\n  const preaperedSearchQuery = searchQuery.toLowerCase();\n\n  const filterTodosByComplited = todos.filter(todo => {\n    const serchingQuery = todo.title.toLowerCase().includes(preaperedSearchQuery);\n\n    const filteredTodo = selectedOption(complitedFilter, todo);\n\n    return serchingQuery && filteredTodo;\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                searchQuery={searchQuery}\n                onSearch={setSearchQuery}\n                complitedFilter={complitedFilter}\n                setComplitedFilter={setComplitedFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {filterTodosByComplited.length === 0\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filterTodosByComplited}\n                    selectedTodoId={selectedTodoId}\n                    setSelectedTodoId={setSelectedTodoId}\n                  />\n                )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onCloseModal={onCloseModal}\n        />\n      )}\n    </>\n  );\n};\n","import { Todo } from '../types/Todo';\n\nexport const selectedOption = (value: string, todo: Todo) => {\n  switch (value) {\n    case 'all':\n      return todo;\n\n    case 'active':\n      return todo.completed === false;\n\n    case 'completed':\n      return todo.completed === true;\n\n    default:\n      break;\n  }\n\n  return value;\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}